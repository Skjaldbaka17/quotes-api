basePath: /api/
consumes:
- application/json
definitions:
  AuthorsView:
    properties:
      hasicelandicquotes:
        type: boolean
        x-go-name: Hasicelandicquotes
      id:
        description: The author's id
        example: 24952
        format: int64
        type: integer
        uniqueItems: true
        x-go-name: Id
      name:
        description: Name of author
        example: Muhammad Ali
        type: string
        x-go-name: Name
      nrofenglishquotes:
        format: int64
        type: integer
        x-go-name: Nrofenglishquotes
      nroficelandicquotes:
        format: int64
        type: integer
        x-go-name: Nroficelandicquotes
    type: object
    x-go-package: github.com/Skjaldbaka17/quotes-api/handlers
  OrderConfig:
    properties:
      maximum:
        description: Where to end the ordering (if empty it ends at the logical end,
          for example end at 'Z' for alphabetical ascending order)
        example: Z
        type: string
        x-go-name: Maximum
      minimum:
        description: Where to start the ordering (if empty it starts from beginning,
          for example start at 'A' for alphabetical ascending order)
        example: F
        type: string
        x-go-name: Minimum
      orderBy:
        description: What to order by, 'alphabetical', 'popularity' or 'nrOfQuotes'
        example: popularity
        type: string
        x-go-name: OrderBy
      reverse:
        description: Whether to order the list in reverse or not (true is Descending
          and false is Ascending, false is default)
        example: true
        type: boolean
        x-go-name: Reverse
    type: object
    x-go-package: github.com/Skjaldbaka17/quotes-api/handlers
  QuoteView:
    properties:
      authorid:
        description: The author's id
        example: 24952
        format: int64
        type: integer
        uniqueItems: true
        x-go-name: Authorid
      isicelandic:
        description: Whether or not this quote is in Icelandic or not
        example: false
        type: boolean
        x-go-name: Isicelandic
      name:
        description: Name of author
        example: Muhammad Ali
        type: string
        x-go-name: Name
      quote:
        description: The quote
        example: Float like a butterfly, sting like a bee.
        type: string
        x-go-name: Quote
      quoteid:
        description: The quote's id
        example: 582676
        format: int64
        type: integer
        uniqueItems: true
        x-go-name: Quoteid
      topicid:
        description: The topic's id
        example: 10
        format: int64
        type: integer
        uniqueItems: true
        x-go-name: Topicid
      topicname:
        description: The topic's name
        example: inspirational
        type: string
        uniqueItems: true
        x-go-name: Topicname
    type: object
    x-go-package: github.com/Skjaldbaka17/quotes-api/handlers
host: quotel-api.com
info:
  contact:
    email: skjaldbaka17@gmail.com
    name: Þórður Ágústsson
  description: |-
    Documentation of our quotes API.
    tags:
    name: QUOTES
    description: Access random quote service. Use this to get random quotes , quotes filtered by authors or tags etc.
  title: quotes-api.
  version: 1.0.0
paths:
  /authors:
    post:
      description: Get authors by their ids
      operationId: getAuthorsByIds
      parameters:
      - description: The structure of the request for authors by their ids
        in: body
        name: Body
        required: true
        schema:
          properties:
            ids:
              description: The list of author's ids you want
              example:
              - 24952
              - 19161
              items:
                format: int64
                type: integer
              type: array
              x-go-name: Ids
          required:
          - ids
          type: object
      responses:
        "200":
          $ref: '#/responses/authorsResponse'
      tags:
      - AUTHORS
  /authors/list:
    post:
      description: Get list of authors according to some ordering / parameters
      operationId: getAuthorsList
      parameters:
      - description: The structure of the request for getting a random author
        in: body
        name: Body
        schema:
          properties:
            OrderConfig:
              $ref: '#/definitions/OrderConfig'
            language:
              description: |-
                The authors must have quotes in the given language, also if ordering by nrOfQuotes if this parameter is set then
                only the amount of quotes the author has in the given language counts towards the ordering.
              example: English
              type: string
              x-go-name: Language
            page:
              description: The page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: The number of Authors to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
          type: object
      responses:
        "200":
          $ref: '#/responses/authorsResponse'
      tags:
      - AUTHORS
  /authors/random:
    post:
      description: Get a random Author, and some of his quotes, according to the given
        parameters
      operationId: getRandomAuthor
      parameters:
      - description: The structure of the request for getting a random author
        in: body
        name: Body
        schema:
          properties:
            language:
              description: The random author must have quotes in the given language
              example: English
              type: string
              x-go-name: Language
            maxQuotes:
              description: How many quotes, maximum, to be returned from this author
              example: 10
              format: int64
              type: integer
              x-go-name: MaxQuotes
          type: object
      responses:
        "200":
          $ref: '#/responses/randomAuthorResponse'
      tags:
      - AUTHORS
  /languages:
    get:
      description: Get languages supported by the api
      operationId: getLanguages
      responses:
        "200":
          $ref: '#/responses/listOfStrings'
      tags:
      - META
  /quotes:
    post:
      description: Get quotes by their ids
      operationId: getQuotesByIds
      parameters:
      - description: The structure of the request for quotes by their ids
        in: body
        name: Body
        required: true
        schema:
          properties:
            ids:
              description: The list of quotes's ids you want
              example:
              - 582676
              - 443976
              items:
                format: int64
                type: integer
              type: array
              x-go-name: Ids
          required:
          - ids
          type: object
      responses:
        "200":
          $ref: '#/responses/multipleQuotesResponse'
      tags:
      - QUOTES
  /quotes/random:
    post:
      description: Get a random quote according to the given parameters
      operationId: getRandomQuote
      parameters:
      - description: The structure of the response to random Quote post request
        in: body
        name: Body
        schema:
          properties:
            authorid:
              description: The random quote returned must be from the author with
                the given authorId
              example: 24952
              format: int64
              type: integer
              x-go-name: Authorid
            language:
              description: The random quote returned must be in the given language
              example: English
              type: string
              x-go-name: Language
            searchString:
              description: The random quote returned must contain a match with the
                searchstring
              example: float
              type: string
              x-go-name: SearchString
            topicId:
              description: The random quote returned must be a part of the topic with
                the given topicId
              example: "10"
              type: string
              x-go-name: TopicId
          type: object
      responses:
        "200":
          $ref: '#/responses/randomQuoteResponse'
      tags:
      - QUOTES
  /search:
    post:
      description: Search for quotes / authors by a general string-search that searches
        both in the names of the authors and the quotes themselves
      operationId: generalSearchByString
      parameters:
      - description: The structure of the request for searching quotes/authors
        in: body
        name: Body
        required: true
        schema:
          properties:
            language:
              description: The particular language that the quote should be in
              example: English
              type: string
              x-go-name: Language
            page:
              description: The page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: The number of quotes to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
            searchString:
              description: The string to be used in the search
              example: sting like butterfly
              type: string
              x-go-name: SearchString
          required:
          - searchString
          type: object
      responses:
        "200":
          $ref: '#/responses/multipleQuotesResponse'
      tags:
      - SEARCH
  /search/authors:
    post:
      description: Authors search. Searching authors by a given search string
      operationId: searchAuthorsByString
      parameters:
      - description: The structure of the request for searching authors
        in: body
        name: Body
        required: true
        schema:
          properties:
            language:
              description: The particular language that the quote should be in
              example: English
              type: string
              x-go-name: Language
            page:
              description: The page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: The number of quotes to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
            searchString:
              description: The string to be used in the search
              example: Ali Muhammad
              type: string
              x-go-name: SearchString
          required:
          - searchString
          type: object
      responses:
        "200":
          $ref: '#/responses/multipleQuotesResponse'
      tags:
      - SEARCH
  /search/quotes:
    post:
      description: Quotes search. Searching quotes by a given search string
      operationId: searchQuotesByString
      parameters:
      - description: The structure of the request for searching quotes/authors
        in: body
        name: Body
        required: true
        schema:
          properties:
            language:
              description: The particular language that the quote should be in
              example: English
              type: string
              x-go-name: Language
            page:
              description: The page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: The number of quotes to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
            searchString:
              description: The string to be used in the search
              example: sting like butterfly
              type: string
              x-go-name: SearchString
          required:
          - searchString
          type: object
      responses:
        "200":
          $ref: '#/responses/multipleQuotesResponse'
      tags:
      - SEARCH
  /topic:
    post:
      description: Get quotes from a particular topic
      operationId: getTopic
      parameters:
      - description: The structure of the request for listing topics
        in: body
        name: Body
        schema:
          properties:
            id:
              description: The topic's id, if left empty then the topic name is used
              example: "10"
              type: string
              x-go-name: Id
            page:
              description: The page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: The number of quotes to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
            topic:
              description: Name of the topic, if left empty then the id is used
              example: Motivational
              type: string
              x-go-name: Topic
          type: object
      responses:
        "200":
          $ref: '#/responses/multipleQuotesTopicResponse'
      tags:
      - TOPICS
  /topics:
    post:
      description: List the available topics, english / icelandic or both
      operationId: getTopics
      parameters:
      - description: The structure of the request for listing topics
        in: body
        name: Body
        schema:
          properties:
            language:
              description: The language of the topics. If left empty all topics from
                all languages are returned
              example: English
              type: string
              x-go-name: Language
          type: object
      responses:
        "200":
          $ref: '#/responses/listTopicsResponse'
      tags:
      - TOPICS
produces:
- application/json
responses:
  authorsResponse:
    description: Data structure representing the response for a authors
    schema:
      items:
        $ref: '#/definitions/AuthorsView'
      type: array
  listOfStrings:
    description: Data structure for a list of strings
    schema:
      items:
        properties:
          languages:
            description: The languages supported
            example:
            - English
            - Icelandic
            items:
              type: string
            type: array
            x-go-name: Languages
        type: object
      type: array
  listTopicsResponse:
    description: Data structure representing a list response for topics
    schema:
      items:
        properties:
          id:
            description: The id of the topic
            example: 10
            format: int64
            type: integer
            x-go-name: Id
          isicelandic:
            description: Boolean whether or not this quote is in icelandic
            example: true
            type: boolean
            x-go-name: Isicelandic
          name:
            description: Name of the topics
            example: inspirational
            type: string
            x-go-name: Name
        type: object
      type: array
  multipleQuotesResponse:
    description: Data structure representing most responses
    schema:
      items:
        $ref: '#/definitions/QuoteView'
      type: array
  multipleQuotesTopicResponse:
    description: Data structure representing topic quotes response
    schema:
      items:
        properties:
          authorid:
            description: The author's id
            example: 26214
            format: int64
            type: integer
            uniqueItems: true
            x-go-name: Authorid
          name:
            description: Name of author
            example: John D. Rockefeller
            type: string
            x-go-name: Name
          quote:
            description: The quote
            example: If you want to succeed you should strike out on new paths, rather
              than travel the worn paths of accepted success.
            type: string
            x-go-name: Quote
          quoteid:
            description: The quote's id
            example: 625402
            format: int64
            type: integer
            uniqueItems: true
            x-go-name: Quoteid
          topicid:
            description: The topic's id
            example: 6
            format: int64
            type: integer
            uniqueItems: true
            x-go-name: Topicid
          topicname:
            description: The topic's name
            example: motivational
            type: string
            uniqueItems: true
            x-go-name: Topicname
        type: object
      type: array
  randomAuthorResponse:
    description: Data structure representing the response for a random author
    schema:
      items:
        $ref: '#/definitions/QuoteView'
      type: array
  randomQuoteResponse:
    description: Data structure representing the response for a random quote
    schema:
      $ref: '#/definitions/QuoteView'
schemes:
- http
securityDefinitions:
  basic:
    type: basic
swagger: "2.0"
tags:
- description: Using text search for finding authors and quotes.
  name: SEARCH
- description: Everthing with quotes.
  name: QUOTES
- description: Everything with authors.
  name: AUTHORS

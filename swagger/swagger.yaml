basePath: /api/
consumes:
- application/json
definitions:
  AuthorsView:
    properties:
      hasicelandicquotes:
        description: Whether or not this author has some icelandic quotes
        example: true
        type: boolean
        x-go-name: Hasicelandicquotes
      id:
        description: The author's id
        example: 24952
        format: int64
        type: integer
        uniqueItems: true
        x-go-name: Id
      name:
        description: Name of the author
        example: Muhammad Ali
        type: string
        x-go-name: Name
      nrofenglishquotes:
        description: How many quotes in icelandic this author has
        example: 78
        format: int64
        type: integer
        x-go-name: Nrofenglishquotes
      nroficelandicquotes:
        description: How many quotes in icelandic this author has
        example: 6
        format: int64
        type: integer
        x-go-name: Nroficelandicquotes
    type: object
    x-go-package: github.com/Skjaldbaka17/quotes-api/structs
  OfTheDayModel:
    properties:
      date:
        description: The date when this author / quote should be 'of the day'
        example: "2020-06-12"
        type: string
        x-go-name: Date
      id:
        description: The id of the author / quote
        example: 1
        format: int64
        type: integer
        x-go-name: Id
      language:
        default: English
        description: The language of this author / quote
        example: icelandic
        type: string
        x-go-name: Language
    type: object
    x-go-name: ofTheDayModel
    x-go-package: github.com/Skjaldbaka17/quotes-api/swagger
  OrderConfiguration:
    properties:
      maximum:
        description: |-
          Where to end the ordering (if empty it ends at the logical end, for example end at the highest quoteid for quoteid ascending order).
          Note this key is always a string.
        example: "11"
        type: string
        x-go-name: Maximum
      minimum:
        description: |-
          Where to start the ordering (if empty it starts from beginning, for example start at 1 for quoteid ascending order).
          Note this key is always a string.
        example: "10"
        type: string
        x-go-name: Minimum
      orderBy:
        description: What to order by, 'quoteId', 'popularity' or 'length'
        example: popularity
        type: string
        x-go-name: OrderBy
      reverse:
        description: Whether to order the list in reverse or not (true is Descending
          and false is Ascending, false is default)
        example: true
        type: boolean
        x-go-name: Reverse
    type: object
    x-go-name: orderConfigListQuotesModel
    x-go-package: github.com/Skjaldbaka17/quotes-api/swagger
  QuoteView:
    properties:
      authorid:
        description: The author's id
        example: 24952
        format: int64
        type: integer
        uniqueItems: true
        x-go-name: Authorid
      isicelandic:
        description: Whether or not this quote is in Icelandic or not
        example: false
        type: boolean
        x-go-name: Isicelandic
      name:
        description: Name of author
        example: Muhammad Ali
        type: string
        x-go-name: Name
      quote:
        description: The quote
        example: Float like a butterfly, sting like a bee.
        type: string
        x-go-name: Quote
      quoteid:
        description: The quote's id
        example: 582676
        format: int64
        type: integer
        uniqueItems: true
        x-go-name: Quoteid
      topicid:
        description: The topic's id
        example: 10
        format: int64
        type: integer
        uniqueItems: true
        x-go-name: Topicid
      topicname:
        description: The topic's name
        example: inspirational
        type: string
        uniqueItems: true
        x-go-name: Topicname
    type: object
    x-go-package: github.com/Skjaldbaka17/quotes-api/structs
  qodResponseModel:
    properties:
      authorid:
        description: The author's id
        example: 24952
        format: int64
        type: integer
        uniqueItems: true
        x-go-name: Authorid
      date:
        description: The date when this author was the author of the day
        example: "2021-06-12T00:00:00Z"
        type: string
        x-go-name: Date
      isicelandic:
        description: Whether the quote is in icelandic
        example: false
        type: boolean
        x-go-name: Isicelandic
      name:
        description: Name of the author
        example: Muhammad Ali
        type: string
        x-go-name: Name
      quote:
        description: The quote for the day
        example: Float like a butterfly, sting like a bee
        type: string
        x-go-name: Quote
      quoteid:
        description: The quote's id
        example: 582676
        format: int64
        type: integer
        uniqueItems: true
        x-go-name: Quoteid
    type: object
    x-go-package: github.com/Skjaldbaka17/quotes-api/swagger
  quotesResponse:
    properties:
      authorid:
        description: The author's id
        example: 24952
        format: int64
        type: integer
        uniqueItems: true
        x-go-name: Authorid
      isicelandic:
        description: Whether or not this quote is in Icelandic or not
        example: false
        type: boolean
        x-go-name: Isicelandic
      name:
        description: Name of author
        example: Muhammad Ali
        type: string
        x-go-name: Name
      quote:
        description: The quote
        example: Float like a butterfly, sting like a bee.
        type: string
        x-go-name: Quote
      quoteid:
        description: The quote's id
        example: 582676
        format: int64
        type: integer
        uniqueItems: true
        x-go-name: Quoteid
    type: object
    x-go-name: baseQuotesResponseModel
    x-go-package: github.com/Skjaldbaka17/quotes-api/swagger
host: quotel-api.com
info:
  contact:
    email: skjaldbaka17@gmail.com
    name: Þórður Ágústsson
  description: |-
    Quotel API offers a complete feature rich REST API access to all your quotes needs. This is the documentation of our quotes API.
    To use it you first need to sign up here https://somethingsomethingdarkside.com to get an authentication api key.
  title: quotes-api.
  version: 1.0.0
paths:
  /authors:
    post:
      description: Get the authors by their ids
      operationId: GetAuthors
      parameters:
      - description: The structure of the request for getting authors by their ids
        in: body
        name: Body
        required: true
        schema:
          properties:
            ids:
              description: A list of the authors's ids that you want
              example:
              - 24952
              - 19161
              items:
                format: int64
                type: integer
              type: array
              x-go-name: Ids
          required:
          - ids
          type: object
      responses:
        "200":
          $ref: '#/responses/authorsResponse'
      tags:
      - AUTHORS
  /authors/aod:
    post:
      description: Gets the author of the day
      operationId: GetAuthorOfTheDay
      parameters:
      - description: The structure of the request for getting the author / quote of
          the day
        in: body
        name: Body
        schema:
          properties:
            language:
              default: English
              description: Get the author / quote of the day for the given language
                ("icelandic" or "english")
              example: English
              type: string
              x-go-name: Language
          type: object
      responses:
        "200":
          $ref: '#/responses/authorOfTheDayResponse'
      tags:
      - AUTHORS
  /authors/aod/history:
    post:
      description: Gets the history for the authors of the day
      operationId: GetAODHistory
      parameters:
      - description: The structure of the request for getting the history of AODs
          / QODs
        in: body
        name: Body
        schema:
          items:
            properties:
              language:
                default: English
                description: Get the history of the AODS / QODs for the given language
                  ("icelandic" or "english")
                example: icelandic
                type: string
                x-go-name: Language
              minimum:
                description: The earliest date to return. All authors / quotes between
                  minimum and today will be returned.
                example: "2020-12-21"
                type: string
                x-go-name: Minimum
            type: object
          type: array
      responses:
        "200":
          $ref: '#/responses/aodHistoryResponse'
      tags:
      - AUTHORS
  /authors/aod/new:
    post:
      description: sets the author of the day for the given dates
      operationId: SetAuthorOfTheDay
      parameters:
      - description: The structure of the request for setting AODs
        in: body
        name: Body
        schema:
          items:
            properties:
              Aods:
                items:
                  $ref: '#/definitions/OfTheDayModel'
                type: array
            type: object
          type: array
      responses:
        "200":
          $ref: '#/responses/successResponse'
      tags:
      - AUTHORS
  /authors/list:
    post:
      description: Get a list of authors according to some ordering / parameters
      operationId: ListAuthors
      parameters:
      - description: The structure of the request for getting a list of authors
        in: body
        name: Body
        schema:
          properties:
            OrderConfig:
              $ref: '#/definitions/OrderConfiguration'
            language:
              description: |-
                Only return authors that have quotes in the given language ("english" or "icelandic") if left empty then no constraint
                is set on the quotes' language. Note if ordering by nrOfQuotes if this parameter is set then only the amount of
                quotes the author has in the given language counts towards the final ordering.
              example: English
              type: string
              x-go-name: Language
            page:
              description: Response is paged. This parameter controls the page you
                are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: Response is paged. This parameter controls the number of
                Authors to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
          type: object
      responses:
        "200":
          $ref: '#/responses/authorsResponse'
      tags:
      - AUTHORS
  /authors/random:
    post:
      description: Get a random Author, and some of his quotes, according to the given
        parameters
      operationId: GetRandomAuthor
      parameters:
      - description: The structure of the request for getting a random author
        in: body
        name: Body
        schema:
          properties:
            language:
              description: |-
                The random author must have quotes in the given language ("english" or "icelandic") if left empty then no
                constraint on language is set
              example: English
              type: string
              x-go-name: Language
            maxQuotes:
              default: 1
              description: How many quotes, maximum, to be returned from this author
              example: 10
              format: int64
              maximum: 50
              type: integer
              x-go-name: MaxQuotes
          type: object
      responses:
        "200":
          $ref: '#/responses/randomAuthorResponse'
      tags:
      - AUTHORS
  /languages:
    get:
      description: Get languages supported by the api
      operationId: GetLanguages
      responses:
        "200":
          $ref: '#/responses/listOfStrings'
      tags:
      - META
  /quotes:
    post:
      description: Get quotes by their ids
      operationId: GetQuotes
      parameters:
      - description: |-
          The structure of the request to get quotes. There are two ways to use this route. 1. Send the ids of the quotes to be
          retrieved or 2. send the id of the author of the quotes you want (if you use this option the quotes are paginated)
        in: body
        name: Body
        required: true
        schema:
          properties:
            authorId:
              description: The id of the author of the quotes you want.
              example: 24952
              format: int64
              type: integer
              x-go-name: AuthorId
            ids:
              description: The list of quotes's ids you want
              example:
              - 582676
              - 443976
              items:
                format: int64
                type: integer
              type: array
              x-go-name: Ids
            page:
              description: If using authorId the response is paged. This parameter
                controls the page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: If using authorId the response is paged. This parameter
                controls the number of Authors to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
          type: object
      responses:
        "200":
          $ref: '#/responses/quotesResponse'
      tags:
      - QUOTES
  /quotes/list:
    post:
      description: Get list of quotes according to some ordering / parameters
      operationId: GetQuotesList
      parameters:
      - description: The structure of the request for getting a list of quotes
        in: body
        name: Body
        schema:
          properties:
            OrderConfig:
              $ref: '#/definitions/OrderConfiguration'
            language:
              description: |-
                Only return quotes that have quotes in the given language ("english" or "icelandic") if left empty then no constraint
                is set on the quotes' language.
              example: English
              type: string
              x-go-name: Language
            page:
              description: Response is paged. This parameter controls the page you
                are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: Response is paged. This parameter controls the number of
                Quotes to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
          type: object
      responses:
        "200":
          $ref: '#/responses/quotesResponse'
      tags:
      - QUOTES
  /quotes/qod:
    post:
      description: Gets the history for the quotes of the day
      operationId: GetQODHistory
      parameters:
      - description: The structure of the request for getting the history of AODs
          / QODs
        in: body
        name: Body
        schema:
          items:
            properties:
              language:
                default: English
                description: Get the history of the AODS / QODs for the given language
                  ("icelandic" or "english")
                example: icelandic
                type: string
                x-go-name: Language
              minimum:
                description: The earliest date to return. All authors / quotes between
                  minimum and today will be returned.
                example: "2020-12-21"
                type: string
                x-go-name: Minimum
            type: object
          type: array
      responses:
        "200":
          $ref: '#/responses/qodHistoryResponse'
      tags:
      - QUOTES
  /quotes/qod/new:
    post:
      description: Sets the quote of the day for the given dates
      operationId: SetQuoteOfTheDay
      parameters:
      - description: The structure of the request for setting the QOD
        in: body
        name: Body
        schema:
          properties:
            Qods:
              items:
                $ref: '#/definitions/OfTheDayModel'
              type: array
          type: object
      responses:
        "200":
          $ref: '#/responses/successResponse'
      tags:
      - QUOTES
  /quotes/random:
    post:
      description: Get a random quote according to the given parameters
      operationId: GetRandomQuote
      parameters:
      - description: The structure of the request for a random quote
        in: body
        name: Body
        schema:
          properties:
            authorid:
              description: The random quote returned must be from the author with
                the given authorId
              example: 24952
              format: int64
              type: integer
              x-go-name: Authorid
            language:
              description: The random quote returned must be in the given language
              example: English
              type: string
              x-go-name: Language
            searchString:
              description: The random quote returned must contain a match with the
                searchstring
              example: float
              type: string
              x-go-name: SearchString
            topicId:
              description: The random quote returned must be a part of the topic with
                the given topicId
              example: 10
              format: int64
              type: integer
              x-go-name: TopicId
          type: object
      responses:
        "200":
          $ref: '#/responses/randomQuoteResponse'
      tags:
      - QUOTES
  /search:
    post:
      description: Search for quotes / authors by a general string-search that searches
        both in the names of the authors and the quotes themselves
      operationId: SearchByString
      parameters:
      - description: The structure of the request for searching quotes/authors
        in: body
        name: Body
        required: true
        schema:
          properties:
            language:
              description: The particular language that the quote should be in
              example: English
              type: string
              x-go-name: Language
            page:
              description: The page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: The number of quotes to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
            searchString:
              description: The string to be used in the search
              example: sting like butterfly
              type: string
              x-go-name: SearchString
          required:
          - searchString
          type: object
      responses:
        "200":
          $ref: '#/responses/quotesResponse'
      tags:
      - SEARCH
  /search/authors:
    post:
      description: Authors search. Searching authors by a given search string
      operationId: SearchAuthorsByString
      parameters:
      - description: The structure of the request for searching quotes/authors
        in: body
        name: Body
        required: true
        schema:
          properties:
            language:
              description: The particular language that the quote should be in
              example: English
              type: string
              x-go-name: Language
            page:
              description: The page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: The number of quotes to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
            searchString:
              description: The string to be used in the search
              example: Ali Muhammad
              type: string
              x-go-name: SearchString
          required:
          - searchString
          type: object
      responses:
        "200":
          $ref: '#/responses/authorsResponse'
      tags:
      - SEARCH
  /search/quotes:
    post:
      description: Quotes search. Searching quotes by a given search string
      operationId: SearchQuotesByString
      parameters:
      - description: The structure of the request for searching quotes/authors
        in: body
        name: Body
        required: true
        schema:
          properties:
            language:
              description: The particular language that the quote should be in
              example: English
              type: string
              x-go-name: Language
            page:
              description: The page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: The number of quotes to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
            searchString:
              description: The string to be used in the search
              example: sting like butterfly
              type: string
              x-go-name: SearchString
          required:
          - searchString
          type: object
      responses:
        "200":
          $ref: '#/responses/quotesResponse'
      tags:
      - SEARCH
  /topic:
    post:
      description: Get quotes from a particular topic
      operationId: GetTopic
      parameters:
      - description: The structure of the request for listing topics
        in: body
        name: Body
        schema:
          properties:
            id:
              description: The topic's id, if left empty then the topic name is used
              example: 10
              format: int64
              type: integer
              x-go-name: Id
            page:
              description: The page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: The number of quotes to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
            topic:
              description: Name of the topic, if left empty then the id is used
              example: Motivational
              type: string
              x-go-name: Topic
          type: object
      responses:
        "200":
          $ref: '#/responses/multipleQuotesTopicResponse'
      tags:
      - TOPICS
  /topics:
    post:
      description: List the available topics, english / icelandic or both
      operationId: GetTopics
      parameters:
      - description: The structure of the request for listing topics
        in: body
        name: Body
        schema:
          properties:
            language:
              description: The language of the topics. If left empty all topics from
                all languages are returned
              example: English
              type: string
              x-go-name: Language
          type: object
      responses:
        "200":
          $ref: '#/responses/listTopicsResponse'
      tags:
      - TOPICS
produces:
- application/json
responses:
  aodHistoryResponse:
    description: Data structure representing the response for the history of AODs
    schema:
      items:
        properties:
          date:
            description: The date when this author was the author of the day
            example: "2021-06-12T00:00:00Z"
            type: string
            x-go-name: Date
          id:
            description: The author's id
            example: 24952
            format: int64
            type: integer
            uniqueItems: true
            x-go-name: Id
          name:
            description: Name of the author
            example: Muhammad Ali
            type: string
            x-go-name: Name
        type: object
      type: array
  authorOfTheDayResponse:
    description: Data structure representing the response for the author of the day
    schema:
      properties:
        date:
          description: The date when this author was the author of the day
          example: "2021-06-12T00:00:00Z"
          type: string
          x-go-name: Date
        id:
          description: The author's id
          example: 24952
          format: int64
          type: integer
          uniqueItems: true
          x-go-name: Id
        name:
          description: Name of the author
          example: Muhammad Ali
          type: string
          x-go-name: Name
      type: object
  authorsResponse:
    description: Data structure representing the response for a authors
    schema:
      items:
        $ref: '#/definitions/AuthorsView'
      type: array
  listOfStrings:
    description: Data structure for supported languages information
    schema:
      items:
        properties:
          languages:
            description: The languages supported
            example:
            - English
            - Icelandic
            items:
              type: string
            type: array
            x-go-name: Languages
        type: object
      type: array
  listTopicsResponse:
    description: Data structure representing a list response for topics
    schema:
      items:
        properties:
          id:
            description: The id of the topic
            example: 10
            format: int64
            type: integer
            x-go-name: Id
          isicelandic:
            description: Boolean whether or not this quote is in icelandic
            example: true
            type: boolean
            x-go-name: Isicelandic
          name:
            description: Name of the topics
            example: inspirational
            type: string
            x-go-name: Name
        type: object
      type: array
  multipleQuotesTopicResponse:
    description: Data structure representing topic quotes response
    schema:
      items:
        properties:
          authorid:
            description: The author's id
            example: 26214
            format: int64
            type: integer
            uniqueItems: true
            x-go-name: Authorid
          name:
            description: Name of author
            example: John D. Rockefeller
            type: string
            x-go-name: Name
          quote:
            description: The quote
            example: If you want to succeed you should strike out on new paths, rather
              than travel the worn paths of accepted success.
            type: string
            x-go-name: Quote
          quoteid:
            description: The quote's id
            example: 625402
            format: int64
            type: integer
            uniqueItems: true
            x-go-name: Quoteid
          topicid:
            description: The topic's id
            example: 6
            format: int64
            type: integer
            uniqueItems: true
            x-go-name: Topicid
          topicname:
            description: The topic's name
            example: motivational
            type: string
            uniqueItems: true
            x-go-name: Topicname
        type: object
      type: array
  qodHistoryResponse:
    description: Data structure representing the response for the history of QODS
    schema:
      items:
        $ref: '#/definitions/qodResponseModel'
      type: array
  quoteOfTheDayResponse:
    description: Data structure representing the response for the quote of the day
    schema:
      $ref: '#/definitions/qodResponseModel'
  quotesResponse:
    description: Data structure representing the response for the quotes
    schema:
      items:
        $ref: '#/definitions/quotesResponse'
      type: array
  randomAuthorResponse:
    description: Data structure representing the response for a random author
    schema:
      items:
        $ref: '#/definitions/quotesResponse'
      type: array
  randomQuoteResponse:
    description: Data structure representing the response for a quote
    schema:
      $ref: '#/definitions/QuoteView'
  successResponse:
    description: ""
    schema:
      properties:
        message:
          example: This request was a success
          type: string
          x-go-name: Message
        statusCode:
          description: HTTP status code
          example: 200
          format: int64
          type: integer
          x-go-name: StatusCode
      type: object
schemes:
- http
securityDefinitions:
  apikey:
    description: To use the api you need an access key. The basic access key lets
      you make up to 100 requests an hour.
    in: body
    name: accessKey
    type: apiKey
swagger: "2.0"
tags:
- description: Using text search for finding authors and quotes.
  name: SEARCH
- description: Everthing with quotes.
  name: QUOTES
- description: Access all authors. Use this to get/explore authors, get a random author
    or see the Author of the day.
  name: AUTHORS
